# Generated by Django 3.0.2 on 2021-10-16 17:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('add_name', models.CharField(blank=True, max_length=255, verbose_name='additional name')),
                ('memo', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=255)),
                ('age', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('category', models.CharField(choices=[('daily', '日用品'), ('child', '子供向け'), ('sports', 'スポーツ')], max_length=50)),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('tags', models.ManyToManyField(to='map.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('processing', '処理中'), ('delivering', '配送中'), ('canceled', '配送中止'), ('Done', '配送済')], max_length=50)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.Customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='map.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pub_date', models.DateField(blank=True, null=True, verbose_name='date published')),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('series', models.CharField(blank=True, max_length=255)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('evaluation', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('memo', models.TextField(blank=True)),
                ('authors', models.ManyToManyField(to='map.Author')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='books',
            field=models.ManyToManyField(blank=True, to='map.Book'),
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.UniqueConstraint(fields=('title', 'publisher', 'series'), name='book_unique'),
        ),
        migrations.AddConstraint(
            model_name='author',
            constraint=models.UniqueConstraint(fields=('name', 'add_name'), name='author_unique'),
        ),
    ]
